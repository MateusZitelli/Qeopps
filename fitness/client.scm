(use tcp)
(use utils)

(define send-binary (lambda (output input bin_txt index)
		      (write-line "I")
		      (read-line input)
		      (write-line "I2")
		      (let ((bin_size (string-length bin_txt)))
			(case ((not (= index (- bin_size 10)))
			       (let ((char (string-ref bin_txt index)))
				 (display char)
				 (newline)
				 (display char output)
				 (send-binary output input bin_txt (+ index 1))))
			  (else
			   (display -1 output))))))


(define-values (i o) (tcp-connect "localhost" 4242))
(define directory "./")
(define file_name "teste.c")
(define bin_txt (read-all "./teste.bin"))
(define data (string-append directory "\t" file_name))
;(define flags "-g -pg -pthread")
;(define data (string-append directory "\t" file_name "\t" flags))
(write-line data)
(write-line data o)
(write-line "CHEGOU")
(send-binary o i bin_txt 0)
;(print (read-line i))