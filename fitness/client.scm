(use tcp)
(use utils)

(define send-binary (lambda (output input bin_txt index)
		      (let ((bin_size (string-length bin_txt)))
			(unless (= index bin_size)
				(let ((char (string-ref bin_txt index)))
				  (let ((int (char->integer char)))
				    (display int output)
				    (newline output)
				    (send-binary output input bin_txt (+ index 1))))))))



(define-values (i o) (tcp-connect "localhost" 4242))
(tcp-buffer-size 2048)
(define directory "./")
(define file_name "teste.c")
(define bin_txt (read-all "./teste.bin"))
(define data (string-append directory "\t" file_name))
;(define flags "-g -pg -pthread")
;(define data (string-append directory "\t" file_name "\t" flags))
(write-line data)
(write-line data o)
(send-binary o i bin_txt 0)
(display -1 o)
(newline o)
(flush-output o)
(display (read-line i))
(display -1 o)